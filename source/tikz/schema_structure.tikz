[
    >=triangle 60,              
    start chain=going below,    
    node distance=6mm and 30mm, 
    every join/.style={norm},
    ]
\tikzset{
  base/.style={draw, on chain, on grid, align=center, minimum height=4ex},
  proc/.style={base, rounded corners, text width=20em},
  large/.style={base, rounded corners, text width=30em},
  test/.style={base, rounded corners, aspect=2, text width=8em},
  small/.style={proc, rounded corners,text width=6em},
  % coord node style is used for placing corners of connecting lines
  coord/.style={coordinate, on chain, on grid, node distance=6mm and 55mm},
  % nmark node style is used for coordinate debugging marks
  nmark/.style={draw, cyan, circle, font={\sffamily\bfseries}},
  % -------------------------------------------------
  % Connector line styles for different parts of the diagram
  norm/.style={->, draw},
  free/.style={->, draw},
  cong/.style={->, draw},
  it/.style={font={\small\itshape}}
}

\node [large, font=\tiny, fill=red!25] (files) {
\large\textbf{\texttt{FleurInputSchema.xsd}/\texttt{FleurOutputSchema.xsd}}\\
\tiny
\begin{verbatim}
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="0.35">

<xsd:element name="fleurInput" type="FleurInputType"/>

<xsd:complexType name="FleurInputType">
    <xsd:all>
        <xsd:element maxOccurs="1" minOccurs="0" name="comment" type="xsd:string"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="constants" type="ConstDefGroupType"/>
        <xsd:element name="calculationSetup" type="CalculationSetupType"/>
        <xsd:element name="cell" type="CellType"/>
        <xsd:element name="atomSpecies" type="AtomSpeciesType"/>
        <xsd:element name="atomGroups" type="AtomGroupsType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="output"type="OutputType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="forceTheorem" type="ForcetheoremType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="relaxation" type="RelaxationType"/>
    </xsd:all>
    <xsd:attribute name="fleurInputVersion" type="FleurVersionType" use="required"/>
</xsd:complexType>
<!-- Rest of the Schema is omitted !-->
</xsd:schema>
\end{verbatim}
};

\node[small, font=\tiny\bfseries, fill=blue!25, below] (f0) {Extract Attribute Types};
\node[small, font=\tiny\bfseries, fill=blue!25, left= of f0] (f1) {Extract Text Types};
\node[small, font=\tiny\bfseries, fill=blue!25, left= of f1] (f2) {Extract possible XPaths};
\node[small, font=\tiny\bfseries, fill=blue!25, right=of f0] (f3) {Extract order of Tags};
\node[small, font=\tiny\bfseries, fill=blue!25, right= of f3] (fmisc) {Miscellenaous functions ...};
\node[large, fill=green!25, below= 7cm of files] (objects) {
\textbf{InputSchemaDict/OutputSchemaDict}\\
\begin{itemize}
    \item constructed either from file (\texttt{.fromPath}) or just the version string (\texttt{.fromVersion})
    \item \texttt{xmlschema} attribute with corresponding \texttt{etree.XMLSchema}
    \item Multiple methods for selecting unique xpaths \texttt{tag\_xpath}, \texttt{attrib\_xpath}, etc.
\end{itemize}
};

\draw [->,black]  (files) edge (f0.north);
\draw [->,black]  (files) edge (f1.north);
\draw [->,black]  (files) edge (f2.north);
\draw [->,black]  (files) edge (f3.north);
\draw [->,black]  (files) edge (fmisc.north);
\draw [->,black]  (f0) edge (objects);
\draw [->,black]  (f1) edge (objects);
\draw [->,black]  (f2) edge (objects);
\draw [->,black]  (f3) edge (objects);
\draw [->,black]  (fmisc) edge (objects);